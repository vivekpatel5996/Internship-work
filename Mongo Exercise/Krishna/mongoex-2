----------QUERY / FIND DOCUMENTS---------

1.db.getCollection('movies').find().pretty();
2.db.getCollection('movies').updateMany(
	{
	 'writer':{$exists : true}
	},
	{
	$set:{'writer':'Quentin Tarantino'}
	}
    );
3.db.getCollection('movies').find(
	{'actors':'Brad Pitt'}
    );
4.db.getCollection('movies').updateMany(
	{
	 'franchise':{$exists : true}
	},
	{
	 $set:{'franchise':'The Hobbit'}
	}
     );
5.db.getCollection('movies').find(
	{'year': { $gt:1990,$lt:2000}}
     );
	//or 
  db.getCollection('movies').find(
	{'year': { $gt:1990},'year':{$lt:2000}}
      );
6.db.getCollection('movies').find( 
	{
	$or: [{year: {$lt: 2000}}, {year: {$gt: 2010}}]
	}
      );




-------UPDATE DOCUMENTS--------
	

7.db.getCollection('movies').update(
	{
	 'title':'The Hobbit: An Unexpected Journey'},
	{
	 $set:{
		'synopsis':"A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain 			 with a spirited group of dwarves to reclaim their mountain home - and the gold 		 within it - from the dragon Smaug."
		}
	}
      );
8.db.getCollection('movies').update(
	{
	 'title':'The Hobbit: The Desolation of Smaug'
	},
	{
	  $set:{
		'synopsis':"The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue 			their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in 			possession of a mysterious and magical ring."
	}
	}
    );
9.db.getCollection('movies').update(
	{'title':'Pulp Fiction'},
	{$set:{actors:'Samuel L. Jackson'}}
    );




------TEXT SEARCH-------


//db.getCollection('movies').createIndex({synopsis:"text"})
1.db.getCollection('movies').find({ $text: { $search: "Bilbo" } } )
2.db.getCollection('movies').find({ $text: { $search: "Gandalf" } } )
3.db.getCollection('movies').find({ $text: { $search: "Bilbo -Gandalf"}} )
4.db.getCollection('movies').find(
    {
        $text:
        {$search:"dwarves \"hobbit\""}
     }
     )	

 
5.db.getCollection('movies').find({ $text: { $search: 'gold', $search:'dragon'}})
//or
  db.getCollection('movies').find(
  { $text: { $search: 'gold dragon'}}
     )

1.db.getCollection('movies').deleteOne({'title':"Pee Wee Herman's Big Adventure"})
2.db.getCollection('movies').deleteOne({'title':'Avatar'})





------QUERYING RELATED COLLECTIONS------


1.db.getCollection('users').find({})
2.db.getCollection('posts').find({})
3.db.getCollection('posts').find({'username':'GoodGuyGreg'})
4.db.getCollection('posts').find({'username':'ScumbagSteve'})
5.db.getCollection('comments').find({})
6.db.getCollection('comments').find({username:'GoodGuyGreg'})
7.db.getCollection('comments').find({username:'ScumbagSteve'})
8.var res=db.posts.findOne({'title':'Reports a bug in your code'},{_id:1})
  db.comments.find({'post':res["_id"]})
