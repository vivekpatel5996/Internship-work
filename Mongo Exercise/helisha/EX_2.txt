

---INSERT---

1. db.getCollection('movies').find({})
2. db.getCollection('movies').find({writer : 'Quentin Tarantino'})
3. db.getCollection('movies').find({actors : 'Brad Pitt'})
4. db.getCollection('movies').find({title : {$regex : /The Hobbit:./}})
5. db.getCollection('movies').find({year : {$lte : 1999 , $gte : 1990}})
6. db.getCollection('movies').find( {$or :[{year :{$lte : 2000}} , {year : {$gte : 2010}}]})

---update---

1. db.getCollection('movies').update({'title' : 'The Hobbit: An Unexpected Journey'},{$set : { 'synopsis' :'A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug.'}});
2. db.getCollection('movies').update({'title' : 'The Hobbit: The Desolation of Smaug'},{$set : { 'synopsis' :'The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring.'}});
3. db.getCollection('movies').update({'title':'Pulp Fiction'},{$push : {'actors':'Samuel L. Jackson'}})


---Text Search---

1. db.getCollection('movies').find({$text:
        {
            $search: "Bilbo"
        }});
2. db.getCollection('movies').find({$text:
        {
            $search: "Gandalf"
        }});
3. db.movies.find(
{
    
        $text:
        {
            $search: "Bilbo -Gandalf"
        }
    
});
4. db.movies.find(
{
    
        $text:
        {
            $search: "dwarves \"hobbit\""
        }
    
});
5. db.movies.find(
{
    
        $text:
        {
            $search: "gold",
            $search: "dragon"
        }
    
});

---delete---

1. db.movies.deleteOne(
{
    title:"Pee Wee Herman's Big Adventure"
});

2. db.movies.deleteOne(
{
    title:"Avatar"
});



---Relationship---

1. db.users.find({});
2. db.posts.find({});
3. db.getCollection('posts').find({username:"GoodGuyGreg"});
4. db.getCollection('posts').find({username:"ScumbagSteve"});
5. db.getCollection('comments').find({});
6. db.comments.find({username:"ScumbagSteve"});
7. db.comments.find({username:"GoodGuyGreg"});
8. var result = db.posts.findOne({"title" : "Reports a bug in your code"},{"_id":1});
db.comments.find({post : result["_id"]})


